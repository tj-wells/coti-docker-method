version: '3'

services:
  coti-node:
    image: 'ghcr.io/tj-wells/atom-node/coti-node:${VERSION}'
    command: /bin/bash -c "./update-env && java -Xmx8g -jar fullnode/target/fullnode-${VERSION}.RELEASE.jar --spring.config.additional-location=./data/fullnode.properties"
    ports:
      - '7070:7070'
    expose:
      - 80
      - 7070
    restart: on-failure
    env_file:
      - .env
    volumes:
      - './data:/app/data'
    environment:
      VIRTUAL_HOST: ${SERVERNAME}
      VIRTUAL_PORT: 7070
      LETSENCRYPT_HOST: ${SERVERNAME}
      LETSENCRYPT_EMAIL: ${EMAIL}
    depends_on:
      - nginx
      - dockergen
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: 8G

  nginx:
    image: nginx
    container_name: nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
    labels:
      - 'com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true'

  dockergen:
    image: jwilder/docker-gen
    container_name: nginx-proxy-gen
    depends_on:
      - nginx
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    depends_on:
      - nginx
      - dockergen
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      NGINX_DOCKER_GEN_CONTAINER: nginx-proxy-gen
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  conf:
  vhost:
  html:
  certs:
