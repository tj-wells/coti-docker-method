version: '3'

networks:
  default:
    name: gateway
    external: true
    driver: bridge

volumes:
  coti_config:
  coti_db:
  letsencrypt:

services:
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:1.5.3
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_POLL_INTERVAL: 120
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_LABEL_ENABLE: true
      WATCHTOWER_INCLUDE_RESTARTING: true
      WATCHTOWER_WARN_ON_HEAD_FAILURE: never

  coti-node:
    container_name: coti-node
    image: 'atomnode/coti-node:${VERSION:-latest}'
    command: /bin/bash -c "./create-properties && java -Xmx8g -jar fullnode/target/fullnode-*.RELEASE.jar --spring.config.additional-location=./data/fullnode.properties"
    # image: nginx
    ports:
      - '7070:7070'
      # - '7070:80' # Nginx
    expose:
      - 7070
      - 80
    restart: on-failure
    env_file:
      - .env
    volumes:
      - 'coti_config:/app/data'
      - 'coti_db:/app/FullNoderocksDB1'
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: 8G
    labels:
      # SSL redirect requires a separate router (https://github.com/containous/traefik/issues/4688#issuecomment-477800500)
      - 'traefik.http.routers.coti-node.entryPoints=port7070'
      - 'traefik.http.routers.coti-node.rule=host(`${SERVERNAME}`)'
      - 'traefik.http.middlewares.coti-node-redirect.redirectScheme.scheme=https'
      - 'traefik.http.middlewares.coti-node-redirect.redirectScheme.permanent=true'
      - 'traefik.http.routers.coti-node.middlewares=coti-node-redirect'
      # SSL endpoint
      - 'traefik.http.routers.coti-node-ssl.entryPoints=port443'
      - 'traefik.http.routers.coti-node-ssl.rule=host(`${SERVERNAME}`)'
      - 'traefik.http.routers.coti-node-ssl.tls=true'
      - 'traefik.http.routers.coti-node-ssl.tls.certResolver=le-ssl'
      - 'traefik.http.routers.coti-node-ssl.service=coti-node-ssl'
      - 'traefik.http.services.coti-node-ssl.loadBalancer.server.port=7070'
      # - 'traefik.http.services.coti-node-ssl.loadBalancer.server.port=80' # Nginx
      # Watchtower
      - 'com.centurylinklabs.watchtower.enable=true'

  traefik:
    container_name: traefik
    image: traefik:v2.0.0-beta1
    ports:
      - '80:80'
      - '443:443'
    command:
      - '--global.sendAnonymousUsage=false'
      - '--log.level=DEBUG'
      - '--api'
      - '--metrics'
      - '--metrics.prometheus=true'
      - '--metrics.prometheus.buckets=0.1,0.3,1.2,5.0'
      - '--providers.docker=true'
      - '--providers.docker.watch'

      - '--entryPoints.port443.address=:443'
      - '--entryPoints.port80.address=:80'
      - '--entryPoints.port7070.address=:7070'

      - '--certificatesResolvers.le-ssl.acme.tlsChallenge=true'
      - '--certificatesResolvers.le-ssl.acme.email=${EMAIL}'
      - '--certificatesResolvers.le-ssl.acme.storage=/letsencrypt/acme.json'
    volumes:
      - letsencrypt:/letsencrypt/
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default
